steps:
  # Étape 1: Installer les dépendances et builder le frontend
  - name: 'node:18-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g pnpm
        pnpm install
        # Utilise les variables d'environnement pour la production
        echo "VITE_API_BASE_URL=https://figma-mcp-server-1045310654832.europe-west9.run.app" > .env.production
        echo "VITE_ENVIRONMENT=production" >> .env.production
        pnpm run build

  # Étape 2: Synchroniser les fichiers vers le bucket Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - '-m'  # Mode parallèle pour de meilleures performances
      - 'rsync'
      - '-r'  # Récursif
      - '-c'  # Checksum (ne copie que si différent)
      - '-d'  # Supprime les fichiers qui n'existent plus dans la source
      - 'dist/'
      - 'gs://${_FRONTEND_BUCKET_NAME}/'

  # Étape 3: Configurer les métadonnées des fichiers pour le caching
  # HTML files - cache court (1h) car ils peuvent changer souvent
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - '-m'
      - 'setmeta'
      - '-h'
      - 'Cache-Control:public, max-age=3600, s-maxage=3600'
      - 'gs://${_FRONTEND_BUCKET_NAME}/**/*.html'

  # Assets avec hash - cache long (1 an) car le hash change si le contenu change
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - '-m'
      - 'setmeta'
      - '-h'
      - 'Cache-Control:public, max-age=31536000, immutable'
      - 'gs://${_FRONTEND_BUCKET_NAME}/assets/**'

  # Étape 4: Invalider le cache CDN si configuré (optionnel)
  # Décommentez cette étape une fois le CDN configuré
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   args:
  #     - 'compute'
  #     - 'url-maps'
  #     - 'invalidate-cdn-cache'
  #     - '${_CDN_URL_MAP_NAME}'
  #     - '--path'
  #     - '/*'

# Variables de substitution
# À définir lors de la création du trigger Cloud Build
substitutions:
  _FRONTEND_BUCKET_NAME: figma-mcp-frontend
  # _CDN_URL_MAP_NAME: figma-frontend-cdn  # À utiliser avec le CDN

# Options pour optimiser les performances
options:
  logging: CLOUD_LOGGING_ONLY
  # Utilise une machine plus puissante pour des builds plus rapides
  machineType: 'E2_HIGHCPU_8'